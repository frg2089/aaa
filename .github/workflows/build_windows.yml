name: Build Windows

on:
  push:
  workflow_dispatch:

jobs:
  build:
    name: Build Windows
    runs-on: windows-latest
    outputs:
      msix-conclusion: ${{ steps.msix-artifact.conclusion }}
      installer-conclusion: ${{ steps.installer-artifact.conclusion }}
    steps:
      - name: 签出仓库
        uses: actions/checkout@v4
    
      - name: 上传产物
        id: binary-artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary
          path: binary/**/*
          compression-level: 9

      - name: 上传 MSIX
        id: msix-artifact
        uses: actions/upload-artifact@v4
        with:
          name: msix
          path: pixez.msix
          compression-level: 9

      - name: 上传 MSIX 安装器
        id: installer-artifact
        uses: actions/upload-artifact@v4
        with:
          name: installer
          path: MsixInstaller.exe
          compression-level: 9

      - name: 生成校验和
        shell: pwsh
        run: |-
          Write-Output '### Build Success :rocket:' >> $env:GITHUB_STEP_SUMMARY
          Write-Output '|File|SHA256|' >> $env:GITHUB_STEP_SUMMARY
          Write-Output '|:-|:-:|' >> $env:GITHUB_STEP_SUMMARY
          Write-Output "|[binary](${{ steps.binary-artifact.outputs.artifact-url }})|${{ steps.binary-artifact.outputs.artifact-digest }}|" >> $env:GITHUB_STEP_SUMMARY

          if ('${{ steps.msix-artifact.conclusion }}' -eq 'success') {
            Write-Output "|[msix](${{ steps.msix-artifact.outputs.artifact-url }})|${{ steps.msix-artifact.outputs.artifact-digest }}|" >> $env:GITHUB_STEP_SUMMARY  
          }

          if ('${{ steps.installer-artifact.conclusion }}' -eq 'success') {
            Write-Output "|[installer](${{ steps.installer-artifact.outputs.artifact-url }})|${{ steps.installer-artifact.outputs.artifact-digest }}|" >> $env:GITHUB_STEP_SUMMARY  
          }

  publish:
    name: Publish Release
    runs-on: windows-latest
    needs: build
    # if: startsWith(github.ref, 'refs/tags/')
    permissions: 
      contents: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: 下载所有产物
        uses: actions/download-artifact@v4.1.8
  
      - run: tree
      # - name: 发布到 Release
      #   shell: pwsh
      #   run: |-
      #     gh release upload ${{ github.ref_name }} windows-x86_64.zip --repo ${{ github.repository }}

      #     if ('${{ needs.build.outputs.msix-conclusion }}' -eq 'success') {
      #       gh release upload ${{ github.ref_name }} msix#windows-x86_64.msix --repo ${{ github.repository }}
      #     }

      #     if ('${{ needs.build.outputs.installer-conclusion }}' -eq 'success') {
      #       gh release upload ${{ github.ref_name }} windows-x86_64.exe --repo ${{ github.repository }}
      #     }
